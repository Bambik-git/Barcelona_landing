@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "KievitPro";
  src: url("../fonts/KievitPro-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "KievitPro";
  src: url("../fonts/KievitPro-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "KievitPro";
  src: url("../fonts/KievitPro-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #FFFFFF;
  --color-dark: #000000;
  --color-red: #FF4641;
  --color-light-bg: #F9F7F2;
  --color-light-gray: #9D9D9D;
  --border-radius: 2px;
  --font-family-base: "KievitPro", sans-serif;
  --container-width: 880px;
  --container-padding-x: 20px;
  --transition-duration: 0.2s;
}

body {
  font-size: 15px;
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.67;
  color: var(--color-dark);
  background-color: var(--color-light-bg);
  margin-block: 110px;
}

.container {
  max-width: var(--container-width);
  margin-inline: auto;
  margin-bottom: 20px;
  background-color: var(--color-light);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

.text-orange {
  color: #FC4F1E;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-family: var(--font-family-base);
  font-weight: 700;
}

h1 {
  font-size: 40px;
}

h2 {
  font-size: 29px;
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding-inline: 25px;
  height: 40px;
  border-radius: var(--border-radius);
  border: 3px solid var(--color-red);
  font-weight: 500;
}
.button:hover {
  color: var(--color-light-gray);
}

.scrollbar--red-thin::-webkit-scrollbar {
  width: 3px;
}
.scrollbar--red-thin::-webkit-scrollbar-track {
  background: var(--color-light);
}
.scrollbar--red-thin::-webkit-scrollbar-thumb {
  background: var(--color-red);
}

.scrollbar--gray-thin::-webkit-scrollbar {
  width: 3px;
}
.scrollbar--gray-thin::-webkit-scrollbar-track {
  background: var(--color-light);
}
.scrollbar--gray-thin::-webkit-scrollbar-thumb {
  background: var(--color-light-gray);
}

.radio {
  display: flex;
  align-items: center;
  column-gap: 10px;
  transition-duration: var(--transition-duration);
}
.radio__input {
  width: 20px;
}
.radio__input:not(:checked) + .radio__emulator::after {
  opacity: 0;
}
.radio__emulator {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 4px;
  aspect-ratio: 1;
  position: relative;
  background-color: #212121;
  border: var(--border);
  border-radius: 50%;
}
.radio__emulator::after {
  width: 8px;
  aspect-ratio: 1;
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  background-color: var(--color-red);
  border-radius: 50%;
  transition-duration: var(--transition-duration);
}

.radios {
  display: flex;
  column-gap: 10px;
  width: 10px;
}

.popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  opacity: 0;
  background: rgba(0, 0, 0, 0.8);
  pointer-events: none;
  transition: var(--transition-duration);
}
.popup.active {
  opacity: 1;
  pointer-events: all;
  transition: var(--transition-duration);
}
.popup__inner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  width: 75%;
  height: 75%;
  padding: 25px;
  transition: var(--transition-duration);
  overflow: auto;
}
.popup__inner.active {
  transform: translate(-50%, -50%) scale(1);
  transition: var(--transition-duration);
}
.popup__close {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 50px;
  aspect-ratio: 1;
  position: absolute;
  right: 15%;
  top: 5%;
  cursor: pointer;
}
.popup__close:after, .popup__close:before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 100%;
  height: 2px;
  background-color: #9D9D9D;
}
.popup__close:after {
  rotate: 45deg;
}
.popup__close:before {
  rotate: 135deg;
}
.popup__open {
  cursor: pointer;
}
.popup__body {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 30px;
}

.hero {
  display: flex;
  align-items: center;
  column-gap: 30px;
}
.hero__inner {
  display: flex;
  flex-direction: column;
  row-gap: 20px;
  padding-right: 40px;
  align-items: start;
}
.hero__description, .hero__read-more-link {
  font-size: 17px;
}
.hero__read-more-link {
  border-bottom: 3px solid var(--color-red);
}
.hero__read-more-link:hover {
  color: var(--color-light-gray);
}

.reviews {
  padding: 35px 30px;
  overflow-x: hidden;
}
.reviews__title {
  padding-bottom: 20px;
}
.reviews__inner {
  display: flex;
  column-gap: 20px;
  transition: transform 0.5s ease-in-out;
}
.reviews__footer {
  padding-top: 30px;
  display: flex;
  justify-content: space-between;
}

.review-card {
  background-color: var(--color-light-bg);
  padding: 26px 15px 10px 20px;
  min-width: 300px;
}
.review-card__header {
  display: flex;
  align-items: start;
  column-gap: 10px;
  padding-bottom: 25px;
}
.review-card__avatar {
  width: 30px;
  aspect-ratio: 1;
  border-radius: 50%;
}
.review-card__user-fullname {
  font-weight: 400;
}
.review-card__body {
  display: flex;
  flex-direction: column;
  row-gap: 10px;
}
.review-card__title {
  text-transform: uppercase;
  font-size: 13px;
}
.review-card__title > p {
  font-weight: 400;
  color: #212121;
}
.review-card__title > p > span {
  font-weight: 500;
}
.review-card__description {
  font-weight: 400;
  line-height: 1.7;
  font-family: "Roboto", sans-serif;
  flex-grow: 0;
}
.review-card__images {
  display: flex;
  column-gap: 5px;
  position: relative;
}
.review-card__image-counter {
  position: absolute;
  top: 50%;
  right: 20%;
  transform: translate(-50%, -50%);
  font-size: 17px;
  color: var(--color-light);
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  text-align: center;
  cursor: pointer;
  transition: transform ease, font-size ease;
  transition-duration: var(--transition-duration);
}
.review-card__image-counter:hover {
  transform: translate(-50%, -50%) scale(1.3);
  font-size: 20px;
}
.review-card__image--small {
  width: 50px;
  aspect-ratio: 1;
  transition: var(--transition-duration);
}
.review-card__image--small:nth-last-child(2) {
  filter: brightness(60%);
  position: relative;
}
.review-card__image--small:nth-last-child(2):hover + .review-card__image-counter {
  transform: translate(-50%, -50%) scale(1.3);
  font-size: 20px;
}
.review-card__image--small:hover {
  transform: scale(1.2);
}
.review-card__footer {
  display: flex;
  column-gap: 20px;
  padding-top: 15px;
  color: var(--color-light-gray);
  font-size: 11px;
  font-family: "Roboto", sans-serif;
}
.review-card__likes {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  column-gap: 5px;
}
.review-card__likes svg:hover {
  cursor: pointer;
  stroke: var(--color-red);
  fill: var(--color-red);
}

.chatting {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--color-light-bg);
  padding-bottom: 30px;
}
.chatting__title {
  margin-bottom: 25px;
}
.chatting__inner:not(:last-child) {
  padding-right: 25px;
  border-right: 1px solid #EBE9E4;
  margin-right: 25px;
}

.chat {
  --ChatPaddingLeft: 25px;
  --ChatPaddingRight:15px;
  --ChatPaddingBlock:30px;
  min-width: 415px;
  width: 100%;
  background-color: var(--color-light);
}
.chat__header {
  display: flex;
  align-items: center;
  justify-content: center;
  column-gap: 20px;
  padding-block: var(--ChatPaddingBlock);
  padding-left: var(--ChatPaddingLeft);
  padding-right: var(--ChatPaddingRight);
}
.chat__avatar {
  width: 44px;
  aspect-ratio: 1;
  border-radius: 50%;
}
.chat__title {
  display: flex;
  align-items: start;
  justify-content: center;
  flex-direction: column;
}
.chat__username {
  font-size: 18px;
  font-weight: 700;
  line-height: 1;
}
.chat__whois {
  color: var(--color-red);
  font-size: 13px;
  font-weight: 400;
}
.chat__rating {
  margin-left: auto;
}
.chat__body {
  border-block: 1px solid #ECECEC;
  max-height: 500px;
  overflow-y: auto;
  scrollbar-color: var(--color-red);
  padding-inline: 10px;
}
.chat__send-form {
  display: flex;
  column-gap: 15px;
  justify-content: space-between;
  align-items: center;
  padding-block: var(--ChatPaddingBlock);
  padding-left: var(--ChatPaddingLeft);
  padding-right: var(--ChatPaddingRight);
}
.chat__input {
  min-width: 270px;
  width: 100%;
  padding: 15px 25px;
  border: 1px solid #ECECEC;
}
.chat__input:focus-visible {
  outline: 1px solid var(--color-light-gray);
}
.chat__send-button {
  padding: 0;
  background-color: transparent;
  border: none;
  cursor: pointer;
}
.chat__send-button svg:hover {
  stroke: var(--color-light-gray);
}

.message {
  display: flex;
  align-items: start;
  column-gap: 20px;
  padding: 5px 0 5px 15px;
}
.message__avatar {
  width: 44px;
  aspect-ratio: 1;
  border-radius: 50px;
}
.message__text-block {
  display: flex;
  flex-direction: column;
  row-gap: 5px;
}
.message__text {
  letter-spacing: 0;
  font-weight: 400;
  line-height: 1.67;
}
.message__time {
  color: #9D9D9D;
  font-weight: 400;
  font-size: 11px;
  font-family: "Roboto", sans-serif;
  line-height: 25px;
}

.message-from__user {
  background-color: var(--color-light-bg);
}

/*# sourceMappingURL=styles.css.map */
